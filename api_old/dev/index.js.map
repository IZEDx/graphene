{"version":3,"sources":["models/enums/UserRole.ts","models/scalars/Password.ts","models/User.ts","validators/SafePassword.ts","resolvers/user/CreateUserInput.ts","resolvers/user/EditUserInput.ts","resolvers/user/LoginUserInput.ts","libs/bcrypt.ts","services/UserService.ts","resolvers/user/UserResolver.ts","models/KeyValue.ts","models/GrapheneConfig.ts","resolvers/grapheneConfig/GrapheneConfigResolver.ts","../../node_modules/parcel/src/builtins/bundle-url.js","../../node_modules/parcel/src/builtins/bundle-loader.js","server.ts","index.ts","models/scalars/RichContent.ts","../../node_modules/parcel/src/builtins/loaders/node/js-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","Promise","resolve","code","LazyPromise","reject","loadBundles","slice","then","all","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","e","executor","promise","prototype","onSuccess","onError","fs","loadJSBundle","readFile","__dirname","data","setImmediate","Function"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["import { registerEnumType } from \"type-graphql\";\r\n\r\nexport enum UserRole\r\n{\r\n    ADMIN = \"ADMIN\",\r\n    USER = \"USER\",\r\n}\r\n\r\nregisterEnumType(UserRole, {\r\n    name: \"UserRole\" // this one is mandatory\r\n});","import { GraphQLScalarType, Kind } from \"graphql\";\r\n\r\nexport const passwordMask = \"******\";\r\n\r\nexport const Password = new GraphQLScalarType(\r\n{\r\n    name: \"Password\",\r\n    description: \"Password scalar type\",\r\n    parseValue(value: string) {\r\n        return value; // value from the client input variables\r\n    },\r\n    serialize(value: string) {\r\n        return passwordMask; // value sent to the client\r\n    },\r\n    parseLiteral(ast) {\r\n        if (ast.kind === Kind.STRING) {\r\n            return ast.value; // value from the client query\r\n        }\r\n        return null;\r\n    },\r\n});","import { Entity, BaseEntity, PrimaryGeneratedColumn, Column } from \"typeorm\";\r\nimport { Field, ObjectType, ID,  } from \"type-graphql\";\r\nimport { UserRole } from \"./enums/UserRole\";\r\nimport { Password } from \"./scalars/Password\";\r\n\r\n@ObjectType()\r\n@Entity()\r\nexport default class User extends BaseEntity\r\n{\r\n    @PrimaryGeneratedColumn()\r\n    @Field(type => ID)\r\n    id: string;\r\n\r\n    @Column()\r\n    @Field()\r\n    name: string;\r\n\r\n    @Column()\r\n    @Field(type => Password)\r\n    password: string;\r\n\r\n    @Column(\"varchar\")\r\n    @Field(type => UserRole)\r\n    role: UserRole;\r\n}   ","import {ValidatorConstraint, ValidatorConstraintInterface, ValidationArguments} from \"class-validator\";\r\nimport { passwordMask } from \"../models/scalars/Password\";\r\n\r\nconst letters = \"abcdefghijklmnopqrstuvwxyz\";\r\nconst digits = \"0123456789\";\r\nconst specialChars = \"!\\\"§$%&/()=?`{[]}\\\\´+-.,;:_'*<>|°^~\";\r\n\r\n@ValidatorConstraint({ name: \"safePassword\", async: false })\r\nexport class SafePassword implements ValidatorConstraintInterface \r\n{\r\n    length = false;\r\n    lowerCase = false;\r\n    upperCase = false;\r\n    digit = false;\r\n    specialChar = false;\r\n\r\n    validate(pw: string, args: ValidationArguments) \r\n    {\r\n        this.length = pw.length >= 8 && pw.length <= 32;\r\n        this.lowerCase = letters.toLowerCase().split(\"\").find(letter => pw.includes(letter)) !== undefined;\r\n        this.upperCase = letters.toUpperCase().split(\"\").find(letter => pw.includes(letter)) !== undefined;\r\n        this.digit = digits.split(\"\").find(digit => pw.includes(digit)) !== undefined;\r\n        this.specialChar = specialChars.split(\"\").find(char => pw.includes(char)) !== undefined;\r\n\r\n        return pw === passwordMask || (this.length && this.lowerCase && this.upperCase && this.digit && this.specialChar);\r\n    }\r\n\r\n    defaultMessage(args: ValidationArguments) \r\n    {\r\n        if (!this.length)       return \"Password is too short or too long!\";\r\n        if (!this.lowerCase)    return \"Password must contain a lowecase letter!\";\r\n        if (!this.upperCase)    return \"Password must contain an uppercase letter!\";\r\n        if (!this.digit)        return \"Password must contain a digit!\";\r\n        if (!this.specialChar)  return \"Password must contain a special character!\";\r\n        return \"Something went wrong!\";\r\n    }\r\n\r\n}","import { InputType, Field } from \"type-graphql\";\r\nimport { UserRole } from \"../../models/enums/UserRole\";\r\nimport { Password } from \"../../models/scalars/Password\";\r\nimport { Length, Validate } from \"class-validator\";\r\nimport { SafePassword } from \"../../validators/SafePassword\";\r\n\r\n@InputType()\r\nexport class CreateUserInput {\r\n    @Field()\r\n    @Length(3, 12)\r\n    name: string;\r\n\r\n    @Field(type => Password)\r\n    @Validate(SafePassword)\r\n    password: string;\r\n\r\n    @Field(type => UserRole)\r\n    role: UserRole;\r\n}\r\n","import { InputType, Field } from \"type-graphql\";\r\nimport { UserRole } from \"../../models/enums/UserRole\";\r\nimport { Password } from \"../../models/scalars/Password\";\r\nimport { Length, Validate } from \"class-validator\";\r\nimport { SafePassword } from \"../../validators/SafePassword\";\r\n\r\n@InputType()\r\nexport class EditUserInput {\r\n    @Field()\r\n    id: string;\r\n\r\n    @Field()\r\n    @Length(3, 12)\r\n    name: string;\r\n\r\n    @Field(type => Password)\r\n    @Validate(SafePassword)\r\n    password: string;\r\n\r\n    @Field(type => UserRole)\r\n    role: UserRole;\r\n}\r\n","import { InputType, Field } from \"type-graphql\";\r\nimport { Password } from \"../../models/scalars/Password\";\r\nimport { Length } from \"class-validator\";\r\n\r\n@InputType()\r\nexport class LoginUserInput {\r\n    @Field()\r\n    @Length(3, 12)\r\n    name: string;\r\n\r\n    @Field(type => Password)\r\n    password: string;\r\n}\r\n","import bcrypt from \"bcryptjs\";\r\n\r\nexport const hash = (value: string, salt: string|number = 8) => \r\n    new Promise<string>((res, rej) => \r\n        bcrypt.hash(value, salt, (err, result) => {\r\n            if (err) rej(err);\r\n            else res(result);\r\n        })\r\n    );\r\n\r\nexport const compare = (value: string, hash: string) => \r\n    new Promise<boolean>((res, rej) => \r\n        bcrypt.compare(value, hash, (err, result) => {\r\n            if (err) rej(err);\r\n            else res(result);\r\n        })\r\n    );","import { Service, Inject } from \"typedi\";\nimport { GrapheneServer, GrapheneContext } from \"../server\";\nimport User from \"../models/User\";\nimport { EditUserInput } from \"../resolvers/user/EditUserInput\";\nimport { CreateUserInput } from \"../resolvers/user/CreateUserInput\";\nimport { compare, hash } from \"../libs/bcrypt\";\nimport { passwordMask } from \"../models/scalars/Password\";\nimport jwt from \"jsonwebtoken\";\nimport { AuthChecker } from \"type-graphql\";\nimport { Tracer } from \"tracer\";\n\n\n@Service()\nexport class UserService\n{\n\n    @Inject(\"server\") server: GrapheneServer;\n    @Inject(\"logger\") logger: Tracer.Logger;\n\n    static AuthChecker: AuthChecker<GrapheneContext> = \n    async ({ root, args, context, info }, roles) => \n    {\n        if (!context.user.id) return false;\n\n        const user = await User.findOne(context.user.id);\n        if (user) {\n            return roles.length === 0 || roles.includes(user.role);\n        }\n        return false; \n    }\n\n    authorize(user: User, ctx: GrapheneContext) \n    {\n        const expiresInDays = this.server.options.authExpire ?? 1;\n        const token = jwt.sign({ id: user.id }, this.server.options.secret ?? \"Graphene\", {\n            expiresIn: expiresInDays + \"d\",\n        }) as string;\n\n        ctx.res.cookie('token', token, {\n            path: \"/\",\n            expires: new Date(Date.now() + (expiresInDays * 1000 * 60 * 60 * 24)),\n            secure: false, // set to true if your using https\n            httpOnly: true,\n        });\n\n        return token;\n    };\n\n    checkPassword(user: User, password: string)\n    {\n        return compare(password, user.password);\n    }\n\n    async create(data: CreateUserInput)\n    {\n        Object.assign(data, {\n            password: await hash(data.password)\n        });\n\n        return User.create(data).save();\n    }\n\n    async update(user: User, data: Partial<EditUserInput>)\n    {\n        Object.assign(user, data, {\n            password: !data.password || data.password === passwordMask ? user.password : await hash(data.password),\n            id: user.id\n        });\n        \n        return user.save();\n    }\n}","import { Arg, Query, Resolver, Mutation, Authorized, Ctx } from \"type-graphql\";\r\nimport User from \"../../models/User\";\r\nimport { CreateUserInput } from \"./CreateUserInput\";\r\nimport { EditUserInput } from \"./EditUserInput\";\r\nimport { LoginUserInput } from \"./LoginUserInput\";\r\nimport { GrapheneContext } from \"../../server\";\r\nimport { Service } from \"typedi\";\r\nimport { UserService } from \"../../services/UserService\";\r\n\r\n@Service()\r\n@Resolver(of => User)\r\nexport default class UserResolver //implements ResolverInterface<User>\r\n{\r\n    constructor(\r\n        private readonly userService: UserService\r\n    ){}\r\n\r\n    @Authorized(\"USER\", \"ADMIN\")\r\n    @Query(returns => [User])\r\n    users()\r\n    {\r\n        return User.find();\r\n    }\r\n\r\n    @Authorized(\"USER\", \"ADMIN\")\r\n    @Query(() => User)\r\n    user(@Arg(\"id\") id: string) \r\n    {\r\n        return User.findOne({ where: { id } });\r\n    }\r\n\r\n    @Authorized(\"ADMIN\")\r\n    @Mutation(() => User)\r\n    async createUser(@Arg(\"data\") data: CreateUserInput) \r\n    {\r\n        return this.userService.create(data);\r\n    }\r\n\r\n    @Authorized(\"ADMIN\")\r\n    @Mutation(() => User)\r\n    async editUser(@Arg(\"data\") data: EditUserInput) \r\n    {\r\n        const user = await User.findOne({ where: { id: data.id } });\r\n        if (!user) throw new Error(\"User not found: \" + data.id);\r\n\r\n        return this.userService.update(user, data);\r\n    }\r\n\r\n    @Authorized(\"ADMIN\")\r\n    @Mutation(() => User)\r\n    async deleteUser(@Arg(\"id\") id: string) \r\n    {\r\n        const user = await User.findOne({ where: { id } });\r\n        if (!user) throw new Error(\"User not found: \" + id);\r\n\r\n        return user.remove();\r\n    }\r\n\r\n    @Authorized(\"USER\", \"ADMIN\")\r\n    @Query(() => User)\r\n    async me(@Ctx() context: GrapheneContext)\r\n    {\r\n        const user = await User.findOne({ where: { id: context.user.id } });\r\n        if (!user) throw new Error(\"User not found: \" + context.user.id);\r\n\r\n        return user; \r\n    }\r\n\r\n    @Authorized(\"USER\", \"ADMIN\")\r\n    @Mutation(() => User)\r\n    async editMe(@Arg(\"data\") data: EditUserInput, @Ctx() context: GrapheneContext) \r\n    {\r\n        const user = await User.findOne({ where: { id: context.user.id } });\r\n\r\n        return this.userService.update(user!, data);\r\n    }\r\n\r\n    @Mutation(() => String)\r\n    async login(@Arg(\"data\") data: LoginUserInput, @Ctx() context: GrapheneContext)\r\n    {\r\n        const user = await User.findOne({ where: { name: data.name } });\r\n        if (!user || !await this.userService.checkPassword(user, data.password)) throw new Error(\"Credentials invalid\");\r\n\r\n        return this.userService.authorize(user, context);\r\n    }\r\n\r\n    @Authorized(\"USER\", \"ADMIN\")\r\n    @Mutation(type => String)\r\n    async logout(@Ctx() context: GrapheneContext)\r\n    {\r\n        context.res.clearCookie('token');\r\n        context.user = {};\r\n        return \"\";\r\n    }\r\n} ","import { Field, ObjectType } from \"type-graphql\";\r\n\r\n@ObjectType()\r\nexport default class KeyValue\r\n{\r\n    constructor(key: string, value: string)\r\n    {\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n\r\n    @Field()\r\n    key: string;\r\n\r\n    @Field()\r\n    value: string;\r\n}   ","import { Field, ObjectType } from \"type-graphql\";\r\nimport KeyValue from \"./KeyValue\";\r\n\r\n@ObjectType()\r\nexport default class GrapheneConfig\r\n{\r\n\r\n    @Field(type => [KeyValue])\r\n    inputRenderers: KeyValue[];\r\n\r\n    @Field(type => [KeyValue])\r\n    cellRenderers: KeyValue[];\r\n\r\n    @Field(type => [String])\r\n    hiddenContentTypes: string[];\r\n\r\n    constructor(\r\n        inputRenderers: Record<string, string>,\r\n        cellRenderers: Record<string, string>,\r\n        hiddenContentTypes: string[]\r\n    ) {\r\n        this.inputRenderers = Object.entries(inputRenderers)\r\n            .map(([key, value]) => new KeyValue(key, value));\r\n\r\n        this.cellRenderers = Object.entries(cellRenderers)\r\n            .map(([key, value]) => new KeyValue(key, value));\r\n\r\n        this.hiddenContentTypes = [...hiddenContentTypes];\r\n    }\r\n}   ","import { Arg, Query, Resolver, Mutation, Authorized, Ctx } from \"type-graphql\";\r\nimport User from \"../../models/User\";\r\nimport { GrapheneContext, GrapheneServer } from \"../../server\";\r\nimport { Service, Inject } from \"typedi\";\r\nimport { UserService } from \"../../services/UserService\";\r\nimport GrapheneConfig from \"../../models/GrapheneConfig\";\r\n\r\n@Service()\r\n@Resolver(of => GrapheneConfig)\r\nexport default class GrapheneConfigResolver //implements ResolverInterface<User>\r\n{\r\n    @Inject(\"server\") server: GrapheneServer;\r\n\r\n    @Authorized(\"USER\", \"ADMIN\")\r\n    @Query(() => GrapheneConfig)\r\n    async grapheneConfig()\r\n    {\r\n        return this.server.clientConfig;\r\n    }\r\n} ","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","import express, {Express} from 'express';\r\nimport { ApolloServer } from 'apollo-server-express';\r\nimport depthLimit from 'graphql-depth-limit';\r\nimport compression from 'compression';\r\nimport cors from 'cors';\r\nimport { buildSchema, AuthChecker } from 'type-graphql';\r\nimport { GraphQLSchema } from 'graphql';\r\nimport UserResolver from './resolvers/user/UserResolver';\r\nimport { createConnection, Connection, EntitySchema, ConnectionOptions, useContainer } from 'typeorm';\r\nimport { join } from \"path\";\r\nimport User from './models/User';\r\nimport { readFile } from 'fs';\r\nimport jwt from \"express-jwt\"; \r\nimport { ExpressContext } from 'apollo-server-express/dist/ApolloServer';\r\nimport { UserRole } from './models/enums/UserRole';\r\nimport cookieParser from \"cookie-parser\";\r\nimport { Container } from \"typedi\";\r\nimport { UserService } from './services/UserService';\r\nimport { colorConsole, Tracer } from \"tracer\";\r\nimport GrapheneConfig from './models/GrapheneConfig';\r\nimport GrapheneConfigResolver from './resolvers/grapheneConfig/GrapheneConfigResolver';\r\n\r\nconst www = join(__dirname, \"..\", \"..\", \"ui\", \"www\");\r\nconst indexHtml = join(www, \"index.html\");\r\n\r\nuseContainer(Container);\r\n\r\nexport interface GrapheneContext extends ExpressContext\r\n{\r\n    user: {\r\n        id?: string\r\n    }\r\n}\r\n\r\nexport interface GrapheneOptions \r\n{\r\n    entities?: EntitySchema<any>[];\r\n    resolvers?: (string | Function)[];\r\n    connection?: ConnectionOptions;\r\n    port?: number;\r\n    hostname?: string;\r\n    secret?: string;\r\n    adminPassword?: string;\r\n    customHead?: string;\r\n    inputRenderers?: Record<string, string>;\r\n    cellRenderers?: Record<string, string>;\r\n    hiddenContentTypes?: string[];\r\n    demoMode?: boolean;\r\n    authExpire?: number; // in days\r\n}\r\n\r\nexport class GrapheneServer\r\n{\r\n    public logger: Tracer.Logger;\r\n    public options: GrapheneOptions;\r\n    public schema: GraphQLSchema;\r\n    public apollo: ApolloServer;\r\n    public express: Express;\r\n    public orm: Connection;\r\n\r\n    public clientConfig: GrapheneConfig;\r\n\r\n    private constructor(){}\r\n\r\n    static async create(opts?: GrapheneOptions)\r\n    {\r\n        const server = new GrapheneServer();\r\n        server.options = opts ?? {};\r\n\r\n        Container.set(\"server\", server);\r\n        \r\n        server.logger = colorConsole({\r\n            level: \"debug\",\r\n            format: [\r\n                \"{{timestamp}} graphene <{{title}}> {{message}}\",\r\n                {\r\n                    error: '{{timestamp}} graphene <{{title}}> {{message}} (in {{file}}:{{line}})\\nCall Stack:\\n{{stack}}',\r\n                    warn: '{{timestamp}} graphene <{{title}}> {{message}} (in {{file}}:{{line}})'\r\n                }\r\n            ]\r\n        });\r\n\r\n        Container.set(\"logger\", server.logger);\r\n\r\n        if (opts?.demoMode)\r\n        {\r\n            server.logger.info(\"Running in demo mode\")\r\n        }\r\n\r\n        const connectionConfig = Object.assign({\r\n            type: \"sqlite\",\r\n            database: \"./db.sqlite3\",\r\n            entities: [User, ...(opts?.demoMode ? [await import('./models/DemoPage')] : []), ...(opts?.entities ?? [])],\r\n            synchronize: true\r\n        }, opts?.connection);\r\n\r\n        server.logger.info(`Connecting to ${connectionConfig.database}(${connectionConfig.type})`);\r\n        server.orm = await createConnection(connectionConfig);\r\n\r\n\r\n        server.logger.info(\"Setting up express\");\r\n        server.express = express();\r\n        \r\n        server.express.use('*', cors()); \r\n        server.express.use(compression());\r\n        server.express.use(cookieParser());\r\n\r\n        server.logger.info(\"Setting up jwt\");\r\n        server.express.use(jwt({ \r\n            secret: opts?.secret ?? \"Graphene\",\r\n            credentialsRequired: false,\r\n            getToken: (req) => {\r\n                if (req.headers.authorization?.split(' ')[0] === 'Bearer') {\r\n                    return req.headers.authorization.split(' ')[1];\r\n                } else if (req.query?.token) {\r\n                    return req.query.token;\r\n                } else if (req.cookies?.token) {\r\n                    return req.cookies.token;  \r\n                }\r\n                return null;\r\n            }\r\n        }));\r\n \r\n        server.clientConfig = new GrapheneConfig(\r\n            opts?.inputRenderers ?? {}, \r\n            opts?.cellRenderers ?? {},\r\n            [\"GrapheneConfig\", ...(opts?.hiddenContentTypes ?? [])]\r\n        )\r\n \r\n        server.logger.info(\"Setting up graphql\");\r\n\r\n        const resolvers = [UserResolver, ...(opts?.demoMode ? [await import('./resolvers/demoPage/DemoPageResolver')] : []), GrapheneConfigResolver, ...(opts?.resolvers ?? [])];\r\n        server.schema = await buildSchema({\r\n            resolvers: resolvers as any,\r\n            emitSchemaFile: true,\r\n            authChecker: UserService.AuthChecker,\r\n            container: Container\r\n        });\r\n\r\n        server.apollo = new ApolloServer({ \r\n            schema: server.schema,\r\n            validationRules: [depthLimit(7)],\r\n            context: ({req, res}) => {\r\n                const user = (req as any).user ?? {};\r\n                //server.logger.debug(\"context user\", user);\r\n                return { req, res, user } as GrapheneContext;\r\n            },\r\n        });\r\n        server.apollo.applyMiddleware({ app: server.express, path: '/graphql' });\r\n\r\n        server.logger.info(\"Setting up ui\");\r\n        server.express.use(express.static(www));\r\n        server.express.use((req, res) => {\r\n            readFile(indexHtml, (err, data) => {\r\n                res.send(data.toString().replace(\"<!--CUSTOM_HEAD-->\", opts?.customHead ?? \"\"));\r\n            });\r\n        });\r\n\r\n        server.logger.info(\"Checking for admin user\");\r\n        await server.createAdminUser(opts?.adminPassword);\r\n\r\n        return server;\r\n    }\r\n\r\n\r\n    private async createAdminUser(overridePw?: string)\r\n    {\r\n        const userService = Container.get(UserService);\r\n        let adminUser = await User.findOne({where: {name: \"admin\"}});\r\n        if (!adminUser)\r\n        {\r\n            adminUser = await userService.create({name: \"admin\", role: UserRole.ADMIN, password: \"admin\"});\r\n            this.logger.info(\"Default admin user was created with password: \\\"admin\\\"\");\r\n            this.logger.info(\"Please change your password after first login\");\r\n        }\r\n        \r\n        if (overridePw)\r\n        {\r\n            adminUser = await userService.update(adminUser, {\r\n                password: overridePw\r\n            });\r\n            this.logger.info(\"Admin password was overriden\");\r\n        }\r\n\r\n        return adminUser;\r\n    }\r\n\r\n\r\n    async listen()\r\n    {\r\n        const host = this.options.hostname ?? \"0.0.0.0\";\r\n        const port = this.options.port ?? 1234;\r\n\r\n        return new Promise((res) => \r\n            this.express.listen(port, host, () => {\r\n                    this.logger.info(`Listening on ${host}:${port}`);\r\n                    res();\r\n            })\r\n        );\r\n    }\r\n}","\r\nexport * from \"./server\";\r\n","import { GraphQLScalarType, Kind } from \"graphql\";\r\n\r\nexport const RichContent = new GraphQLScalarType(\r\n{\r\n    name: \"RichContent\",\r\n    description: \"RichContent scalar type\",\r\n    parseValue(value: string) {\r\n        return value; // value from the client input variables\r\n    },\r\n    serialize(value: string) {\r\n        return value; // value sent to the client\r\n    },\r\n    parseLiteral(ast) {\r\n        if (ast.kind === Kind.STRING) {\r\n            return ast.value; // value from the client query\r\n        }\r\n        return null;\r\n    },\r\n});","var fs = require('fs');\n\nmodule.exports = function loadJSBundle(bundle) {\n  return new Promise(function(resolve, reject) {\n    fs.readFile(__dirname + bundle, 'utf8', function(err, data) {\n      if (err) {\n        reject(err);\n      } else {\n        // wait for the next event loop iteration, so we are sure\n        // the current module is fully loaded\n        setImmediate(function() {\n          resolve(data);\n        });\n      }\n    });\n  })\n  .then(function(code) {\n    new Function('', code)();\n  });\n};\n"]}